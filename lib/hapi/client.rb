# hapi
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Hapi
  #  hapi client class.
  class Client
    attr_reader :config

    # Access to portfolio controller.
    # @return [PortfolioController] Returns the controller instance.
    def portfolio
      @portfolio ||= PortfolioController.new config
    end

    # Access to contracts controller.
    # @return [ContractsController] Returns the controller instance.
    def contracts
      @contracts ||= ContractsController.new config
    end

    # Access to campaigns controller.
    # @return [CampaignsController] Returns the controller instance.
    def campaigns
      @campaigns ||= CampaignsController.new config
    end

    # Access to taxonomy controller.
    # @return [TaxonomyController] Returns the controller instance.
    def taxonomy
      @taxonomy ||= TaxonomyController.new config
    end

    def initialize(connection: nil, timeout: 60, max_retries: 0,
                   retry_interval: 1, backoff_factor: 2,
                   retry_statuses: [408, 413, 429, 500, 502, 503, 504, 521, 522, 524],
                   retry_methods: %i[get put],
                   environment: Environment::SANDBOX,
                   skip_ssl_cert_verification: false, config: nil)
      @config = if config.nil?
                  Configuration.new(connection: connection, timeout: timeout,
                                    max_retries: max_retries,
                                    retry_interval: retry_interval,
                                    backoff_factor: backoff_factor,
                                    retry_statuses: retry_statuses,
                                    retry_methods: retry_methods,
                                    environment: environment,
                                    skip_ssl_cert_verification: skip_ssl_cert_verification)
                else
                  config
                end
    end
  end
end
