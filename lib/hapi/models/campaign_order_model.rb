# hapi
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Hapi
  # CampaignOrderModel Model.
  class CampaignOrderModel < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # A vendor-related unique identification for the Company that's making the
    # order. Doesn't affect the
    # order process at all, but provides a method for later filtering by this
    # identification. It's also
    # used when creating a unified report of Campaign orders made in a period of
    # time.
    # @return [String]
    attr_accessor :company_id

    # A vendor-related Reference number for the order. This could be a PO number
    # or an Invoice number.
    # Doesn't affect the order process at all, but provides a way for the ATS to
    # identify the specific
    # order for their internal billing process
    # Maximum length of this field is 80 symbols
    # @return [String]
    attr_accessor :order_reference

    # An ISO 4217 code for a currency to use for order invoicing.
    # Currently only GBP and USD are supported. Default currency is EUR.
    # @return [String]
    attr_accessor :currency

    # Recruiter is the user creating the campaign and you may want to use this
    # to provide filtering by recruiter for groups sharing an account.
    # @return [RecruiterInfoModel]
    attr_accessor :recruiter_info

    # Campaign name as it's going to be listed. Doesn't have to resemble the
    # Posting Title.
    # For example, the Campaign name could be **Software Development Manager**
    # while the Posting
    # title could be **Want to lead a Team of Software Developers? Join us**
    # @return [String]
    attr_accessor :campaign_name

    # Campaign name as it's going to be listed. Doesn't have to resemble the
    # Posting Title.
    # For example, the Campaign name could be **Software Development Manager**
    # while the Posting
    # title could be **Want to lead a Team of Software Developers? Join us**
    # @return [PostingDetailsModel]
    attr_accessor :posting_details

    # Campaign name as it's going to be listed. Doesn't have to resemble the
    # Posting Title.
    # For example, the Campaign name could be **Software Development Manager**
    # while the Posting
    # title could be **Want to lead a Team of Software Developers? Join us**
    # @return [TargetGroupModel]
    attr_accessor :target_group

    # A list of the Products selected by the user.
    # @return [List of String]
    attr_accessor :ordered_products

    # Specification object for some of the ordered products
    # @return [List of OrderedProductsPostElementModel]
    attr_accessor :ordered_products_specs

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['company_id'] = 'companyId'
      @_hash['order_reference'] = 'orderReference'
      @_hash['currency'] = 'currency'
      @_hash['recruiter_info'] = 'recruiterInfo'
      @_hash['campaign_name'] = 'campaignName'
      @_hash['posting_details'] = 'postingDetails'
      @_hash['target_group'] = 'targetGroup'
      @_hash['ordered_products'] = 'orderedProducts'
      @_hash['ordered_products_specs'] = 'orderedProductsSpecs'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        order_reference
        currency
        campaign_name
        ordered_products_specs
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(company_id = nil,
                   recruiter_info = nil,
                   posting_details = nil,
                   target_group = nil,
                   ordered_products = nil,
                   order_reference = nil,
                   currency = nil,
                   campaign_name = nil,
                   ordered_products_specs = nil,
                   additional_properties = {})
      @company_id = company_id unless company_id == SKIP
      @order_reference = order_reference unless order_reference == SKIP
      @currency = currency unless currency == SKIP
      @recruiter_info = recruiter_info unless recruiter_info == SKIP
      @campaign_name = campaign_name unless campaign_name == SKIP
      @posting_details = posting_details unless posting_details == SKIP
      @target_group = target_group unless target_group == SKIP
      @ordered_products = ordered_products unless ordered_products == SKIP
      @ordered_products_specs = ordered_products_specs unless ordered_products_specs == SKIP

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      company_id = hash.key?('companyId') ? hash['companyId'] : SKIP
      recruiter_info = RecruiterInfoModel.from_hash(hash['recruiterInfo']) if
        hash['recruiterInfo']
      posting_details = PostingDetailsModel.from_hash(hash['postingDetails']) if
        hash['postingDetails']
      target_group = TargetGroupModel.from_hash(hash['targetGroup']) if hash['targetGroup']
      ordered_products =
        hash.key?('orderedProducts') ? hash['orderedProducts'] : SKIP
      order_reference =
        hash.key?('orderReference') ? hash['orderReference'] : SKIP
      currency = hash.key?('currency') ? hash['currency'] : SKIP
      campaign_name = hash.key?('campaignName') ? hash['campaignName'] : SKIP
      # Parameter is an array, so we need to iterate through it
      ordered_products_specs = nil
      unless hash['orderedProductsSpecs'].nil?
        ordered_products_specs = []
        hash['orderedProductsSpecs'].each do |structure|
          ordered_products_specs << (OrderedProductsPostElementModel.from_hash(structure) if structure)
        end
      end

      ordered_products_specs = SKIP unless hash.key?('orderedProductsSpecs')

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      CampaignOrderModel.new(company_id,
                             recruiter_info,
                             posting_details,
                             target_group,
                             ordered_products,
                             order_reference,
                             currency,
                             campaign_name,
                             ordered_products_specs,
                             hash)
    end
  end
end
