# hapi
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Hapi
  # FacetAutocompleteModel Model.
  class FacetAutocompleteModel < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :term

    # An object with `contract_credentials` data
    # @return [Object]
    attr_accessor :credentials

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['term'] = 'term'
      @_hash['credentials'] = 'credentials'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        term
        credentials
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(term = nil,
                   credentials = nil,
                   additional_properties = {})
      @term = term unless term == SKIP
      @credentials = credentials unless credentials == SKIP

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      term = hash.key?('term') ? hash['term'] : SKIP
      credentials = hash.key?('credentials') ? hash['credentials'] : SKIP

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      FacetAutocompleteModel.new(term,
                                 credentials,
                                 hash)
    end
  end
end
