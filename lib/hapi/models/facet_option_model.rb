# hapi
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Hapi
  # FacetOptionModel Model.
  class FacetOptionModel < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Whether the option should be the default choice when rendering the SELECT.
    # @return [String]
    attr_accessor :default

    # The value to be used when setting the value of the facet when this option
    # is selected.
    # @return [String]
    attr_accessor :key

    # The option's user-friendly label
    # @return [String]
    attr_accessor :label

    # The order of the option in the list of options. lower value means higher
    # rank.
    # @return [String]
    attr_accessor :sort

    # References to Facets that becomes required when this option is selected
    # @return [List of FacetOptionShowFacetsModel]
    attr_accessor :show

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['default'] = 'default'
      @_hash['key'] = 'key'
      @_hash['label'] = 'label'
      @_hash['sort'] = 'sort'
      @_hash['show'] = 'show'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        show
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(default = nil,
                   key = nil,
                   label = nil,
                   sort = nil,
                   show = nil,
                   additional_properties = {})
      @default = default unless default == SKIP
      @key = key unless key == SKIP
      @label = label unless label == SKIP
      @sort = sort unless sort == SKIP
      @show = show unless show == SKIP

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      default = hash.key?('default') ? hash['default'] : SKIP
      key = hash.key?('key') ? hash['key'] : SKIP
      label = hash.key?('label') ? hash['label'] : SKIP
      sort = hash.key?('sort') ? hash['sort'] : SKIP
      # Parameter is an array, so we need to iterate through it
      show = nil
      unless hash['show'].nil?
        show = []
        hash['show'].each do |structure|
          show << (FacetOptionShowFacetsModel.from_hash(structure) if structure)
        end
      end

      show = SKIP unless hash.key?('show')

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      FacetOptionModel.new(default,
                           key,
                           label,
                           sort,
                           show,
                           hash)
    end
  end
end
