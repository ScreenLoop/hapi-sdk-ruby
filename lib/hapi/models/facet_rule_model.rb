# hapi
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Hapi
  # FacetRuleModel Model.
  class FacetRuleModel < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [RuleEnum]
    attr_accessor :rule

    # the value used for the rule
    # @return [String]
    attr_accessor :data

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['rule'] = 'rule'
      @_hash['data'] = 'data'
      @_hash
    end

    # An array for optional fields
    def optionals
      []
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(rule = nil,
                   data = nil,
                   additional_properties = {})
      @rule = rule unless rule == SKIP
      @data = data unless data == SKIP

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      rule = hash.key?('rule') ? hash['rule'] : SKIP
      data = hash.key?('data') ? hash['data'] : SKIP

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      FacetRuleModel.new(rule,
                         data,
                         hash)
    end
  end
end
