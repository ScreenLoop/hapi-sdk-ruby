# hapi
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Hapi
  # OrderedProductsGetElementModel Model.
  class OrderedProductsGetElementModel < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Product Identification
    # @return [String]
    attr_accessor :product_id

    # Status per product
    # @return [String]
    attr_accessor :status

    # Status description, additional status information
    # @return [String]
    attr_accessor :status_description

    # Date when the channel went online
    # @return [String]
    attr_accessor :delivered_on

    # How long will the `Product` be online. [DEPRECATED] please instead use the
    # `durationPeriod`
    # @return [String]
    attr_accessor :duration

    # How long will the `Product` be online. [DEPRECATED] please instead use the
    # `durationPeriod`
    # @return [DurationModel]
    attr_accessor :duration_period

    # Tracking codes
    # @return [String]
    attr_accessor :utm

    # Link to the job ad on the channel. Sometimes this link is not available
    # from a job board, then the product homepage is returned.
    # @return [String]
    attr_accessor :job_board_link

    # Contract Identifier for My Contracts product
    # @return [String]
    attr_accessor :contract_id

    # Contract Identifier for My Contracts product
    # @return [PostingRequirementsModel]
    attr_accessor :posting_requirements

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['product_id'] = 'productId'
      @_hash['status'] = 'status'
      @_hash['status_description'] = 'statusDescription'
      @_hash['delivered_on'] = 'deliveredOn'
      @_hash['duration'] = 'duration'
      @_hash['duration_period'] = 'durationPeriod'
      @_hash['utm'] = 'utm'
      @_hash['job_board_link'] = 'jobBoardLink'
      @_hash['contract_id'] = 'contractId'
      @_hash['posting_requirements'] = 'postingRequirements'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        product_id
        status
        status_description
        delivered_on
        duration
        duration_period
        utm
        job_board_link
        contract_id
        posting_requirements
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(product_id = nil,
                   status = nil,
                   status_description = nil,
                   delivered_on = nil,
                   duration = nil,
                   duration_period = nil,
                   utm = nil,
                   job_board_link = nil,
                   contract_id = nil,
                   posting_requirements = nil,
                   additional_properties = {})
      @product_id = product_id unless product_id == SKIP
      @status = status unless status == SKIP
      @status_description = status_description unless status_description == SKIP
      @delivered_on = delivered_on unless delivered_on == SKIP
      @duration = duration unless duration == SKIP
      @duration_period = duration_period unless duration_period == SKIP
      @utm = utm unless utm == SKIP
      @job_board_link = job_board_link unless job_board_link == SKIP
      @contract_id = contract_id unless contract_id == SKIP
      @posting_requirements = posting_requirements unless posting_requirements == SKIP

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      product_id = hash.key?('productId') ? hash['productId'] : SKIP
      status = hash.key?('status') ? hash['status'] : SKIP
      status_description =
        hash.key?('statusDescription') ? hash['statusDescription'] : SKIP
      delivered_on = hash.key?('deliveredOn') ? hash['deliveredOn'] : SKIP
      duration = hash.key?('duration') ? hash['duration'] : SKIP
      duration_period = DurationModel.from_hash(hash['durationPeriod']) if hash['durationPeriod']
      utm = hash.key?('utm') ? hash['utm'] : SKIP
      job_board_link = hash.key?('jobBoardLink') ? hash['jobBoardLink'] : SKIP
      contract_id = hash.key?('contractId') ? hash['contractId'] : SKIP
      posting_requirements = PostingRequirementsModel.from_hash(hash['postingRequirements']) if
        hash['postingRequirements']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      OrderedProductsGetElementModel.new(product_id,
                                         status,
                                         status_description,
                                         delivered_on,
                                         duration,
                                         duration_period,
                                         utm,
                                         job_board_link,
                                         contract_id,
                                         posting_requirements,
                                         hash)
    end
  end
end
