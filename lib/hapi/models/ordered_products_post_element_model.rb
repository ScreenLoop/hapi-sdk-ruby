# hapi
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Hapi
  # OrderedProductsPostElementModel Model.
  class OrderedProductsPostElementModel < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Product Identification
    # @return [String]
    attr_accessor :product_id

    # Query string for UTM parameters
    # **Pattern:**
    # `/^([%.-_!*a-zA-Z0-9]{1,}=[%.-_!*+,;$()a-zA-Z0-9]{1,}[&]{0,}){1,}$/`
    # @return [String]
    attr_accessor :utm

    # Contract Identifier needed for My Contracts product
    # @return [String]
    attr_accessor :contract_id

    # Contract Identifier needed for My Contracts product
    # @return [PostingRequirementsModel]
    attr_accessor :posting_requirements

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['product_id'] = 'productId'
      @_hash['utm'] = 'utm'
      @_hash['contract_id'] = 'contractId'
      @_hash['posting_requirements'] = 'postingRequirements'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        product_id
        utm
        contract_id
        posting_requirements
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(product_id = nil,
                   utm = nil,
                   contract_id = nil,
                   posting_requirements = nil,
                   additional_properties = {})
      @product_id = product_id unless product_id == SKIP
      @utm = utm unless utm == SKIP
      @contract_id = contract_id unless contract_id == SKIP
      @posting_requirements = posting_requirements unless posting_requirements == SKIP

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      product_id = hash.key?('productId') ? hash['productId'] : SKIP
      utm = hash.key?('utm') ? hash['utm'] : SKIP
      contract_id = hash.key?('contractId') ? hash['contractId'] : SKIP
      posting_requirements = PostingRequirementsModel.from_hash(hash['postingRequirements']) if
        hash['postingRequirements']

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      OrderedProductsPostElementModel.new(product_id,
                                          utm,
                                          contract_id,
                                          posting_requirements,
                                          hash)
    end
  end
end
