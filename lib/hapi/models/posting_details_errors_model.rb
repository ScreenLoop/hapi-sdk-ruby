# hapi
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Hapi
  # PostingDetailsErrorsModel Model.
  class PostingDetailsErrorsModel < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :title

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :description

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :years_of_experience

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :employment_type

    # TODO: Write general description for this method
    # @return [OrganizationModel]
    attr_accessor :organization

    # TODO: Write general description for this method
    # @return [WorkingLocationModel]
    attr_accessor :working_location

    # TODO: Write general description for this method
    # @return [WeeklyWorkingHoursModel]
    attr_accessor :weekly_working_hours

    # TODO: Write general description for this method
    # @return [SalaryIndicationModel]
    attr_accessor :salary_indication

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :job_page_url

    # TODO: Write general description for this method
    # @return [List of String]
    attr_accessor :application_url

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['title'] = 'title'
      @_hash['description'] = 'description'
      @_hash['years_of_experience'] = 'yearsOfExperience'
      @_hash['employment_type'] = 'employmentType'
      @_hash['organization'] = 'organization'
      @_hash['working_location'] = 'workingLocation'
      @_hash['weekly_working_hours'] = 'weeklyWorkingHours'
      @_hash['salary_indication'] = 'salaryIndication'
      @_hash['job_page_url'] = 'jobPageUrl'
      @_hash['application_url'] = 'applicationUrl'
      @_hash
    end

    # An array for optional fields
    def optionals
      []
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(title = nil,
                   description = nil,
                   years_of_experience = nil,
                   employment_type = nil,
                   organization = nil,
                   working_location = nil,
                   weekly_working_hours = nil,
                   salary_indication = nil,
                   job_page_url = nil,
                   application_url = nil,
                   additional_properties = {})
      @title = title unless title == SKIP
      @description = description unless description == SKIP
      @years_of_experience = years_of_experience unless years_of_experience == SKIP
      @employment_type = employment_type unless employment_type == SKIP
      @organization = organization unless organization == SKIP
      @working_location = working_location unless working_location == SKIP
      @weekly_working_hours = weekly_working_hours unless weekly_working_hours == SKIP
      @salary_indication = salary_indication unless salary_indication == SKIP
      @job_page_url = job_page_url unless job_page_url == SKIP
      @application_url = application_url unless application_url == SKIP

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      title = hash.key?('title') ? hash['title'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP
      years_of_experience =
        hash.key?('yearsOfExperience') ? hash['yearsOfExperience'] : SKIP
      employment_type =
        hash.key?('employmentType') ? hash['employmentType'] : SKIP
      organization = OrganizationModel.from_hash(hash['organization']) if hash['organization']
      working_location = WorkingLocationModel.from_hash(hash['workingLocation']) if
        hash['workingLocation']
      weekly_working_hours = WeeklyWorkingHoursModel.from_hash(hash['weeklyWorkingHours']) if
        hash['weeklyWorkingHours']
      salary_indication = SalaryIndicationModel.from_hash(hash['salaryIndication']) if
        hash['salaryIndication']
      job_page_url = hash.key?('jobPageUrl') ? hash['jobPageUrl'] : SKIP
      application_url =
        hash.key?('applicationUrl') ? hash['applicationUrl'] : SKIP

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      PostingDetailsErrorsModel.new(title,
                                    description,
                                    years_of_experience,
                                    employment_type,
                                    organization,
                                    working_location,
                                    weekly_working_hours,
                                    salary_indication,
                                    job_page_url,
                                    application_url,
                                    hash)
    end
  end
end
