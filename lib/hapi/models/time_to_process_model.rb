# hapi
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Hapi
  # TimeToProcessModel Model.
  class TimeToProcessModel < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The range of the time to process
    # @return [Range1Enum]
    attr_accessor :range

    # The period of the time to process
    # @return [Float]
    attr_accessor :period

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['range'] = 'range'
      @_hash['period'] = 'period'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        range
        period
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(range = nil,
                   period = nil,
                   additional_properties = {})
      @range = range unless range == SKIP
      @period = period unless period == SKIP

      # Add additional model properties to the instance.
      additional_properties.each do |_name, _value|
        instance_variable_set("@#{_name}", _value)
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      range = hash.key?('range') ? hash['range'] : SKIP
      period = hash.key?('period') ? hash['period'] : SKIP

      # Clean out expected properties from Hash.
      names.each_value { |k| hash.delete(k) }

      # Create object from extracted values.
      TimeToProcessModel.new(range,
                             period,
                             hash)
    end
  end
end
