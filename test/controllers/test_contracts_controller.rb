# hapi
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class ContractsControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def setup
    @response_catcher = HttpResponseCatcher.new
    @controller = ContractsController.new CONFIG, http_call_back: @response_catcher
  end

  # This endpoint exposes a list of channels with support for contracts. For all of the required details for creating a contract or a campaign for each channel, please call the "Retrieve details for channel with support for contracts".
  def test_list_channels()
    # Parameters for the API call
    search = nil
    limit = nil
    offset = nil
    accept_language = 'en'

    # Perform the API call through the SDK function
    result = @controller.list_channels(search: search, limit: limit, offset: offset, accept_language: accept_language)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(TestHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '{"count":0,"next":"string","previous":"string","results":[{"mc_enabled"'\
      ':true,"id":0,"name":"string","url":"string","type":"string"}]}'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(TestHelper.match_body(expected_body, received_body))
  end

end
